apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Ephemeral Drupal 7 content management system (CMS)
    iconClass: "icon-php"
    tags: "quickstart,php,drupal"
  name: drupal7-apache-ephemeral
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Definition for Deploying drupal8 database.
    labels:
      service: mysql
    name: ${DATABASE_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${DATABASE_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${DATABASE_SERVICE_NAME}
          service: mysql
        name: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: ${DRUPAL_DB_NAME}
          - name: MYSQL_PASSWORD
            value: ${DRUPAL_DB_PASSWORD}
          - name: MYSQL_ROOT_PASSWORD
            value: ${DATABASE_ADMIN_PASSWORD}
          - name: MYSQL_USER
            value: ${DRUPAL_DB_USER}
          image: 1and1internet/ubuntu-16-nginx-1.10.0-php-7.0-phpmyadmin-4.6-mysql-5.7:latest
          imagePullPolicy: Always
          name: ${DATABASE_SERVICE_NAME}
          ports:
          - containerPort: 3306
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mysql/
            name: ${DATABASE_SERVICE_NAME}-data
        restartPolicy: Always
        securityContext:
          runAsUser: ${OPENSHIFT_USER}
        volumes:
        - emptyDir:
            medium: ""
          name: ${DATABASE_SERVICE_NAME}-data
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Definition for deploying Drupal 7
    labels:
      service: drupal7-apache
    name: ${APP_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${APP_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${APP_SERVICE_NAME}
          service: drupal7-apache
        name: ${APP_SERVICE_NAME}}
      spec:
        containers:
        - env:
          - name: DRUPAL_DB_HOST
            value: ${DATABASE_SERVICE_NAME}
          - name: DRUPAL_DB_NAME
            value: ${DRUPAL_DB_NAME}
          - name: DRUPAL_DB_PASSWORD
            value: ${DRUPAL_DB_PASSWORD}
          - name: DRUPAL_DB_PREFIX
            value: ${DRUPAL_DB_PREFIX}
          - name: DRUPAL_DB_USER
            value: ${DRUPAL_DB_USER}
          image: 1and1internet/ubuntu-16-apache-2.4-php-5.6-drupal-7:latest
          imagePullPolicy: Always
          name: ${APP_SERVICE_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          volumeMounts:
          - mountPath: /var/www/html
            name: drupal7-data
        restartPolicy: Always
        securityContext:
          runAsUser: ${OPENSHIFT_USER}
        volumes:
        - emptyDir:
            medium: ""
          name: drupal7-data
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Route
  metadata:
    name: ${APP_SERVICE_NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    port:
      targetPort: 8080
      protocol: TCP
    to:
      kind: Service
      name: ${APP_SERVICE_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: mysql
    name: ${DATABASE_SERVICE_NAME}
  spec:
    ports:
    - name: ${DATABASE_SERVICE_NAME}
      port: 3306
      protocol: TCP
      targetPort: 3306
    - name: ${DATABASE_SERVICE_NAME}-phpmyadmin
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${DATABASE_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: drupal7
    name: ${APP_SERVICE_NAME}
  spec:
    ports:
    - name: ${APP_SERVICE_NAME}
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${APP_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
parameters:
- description: Password for the database admin user which you can use to administer
    the database
  displayName: Database administrator password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_ADMIN_PASSWORD
  required: true
- description: Application service name
  displayName: Application service name
  from: drupal7[0-9]{3}
  generate: expression
  name: APP_SERVICE_NAME
  required: true
- description: Database service name
  displayName: Database service name
  from: mysql[0-9]{3}
  generate: expression
  name: DATABASE_SERVICE_NAME
  required: true
- description: Default URL or Hostname for the Drupal 7 website
  displayname: Website URL
  name: APPLICATION_DOMAIN
  required: true
- description: Name for the Drupal 7 database
  displayname: Drupal 7 Database Name
  name: DRUPAL_DB_NAME
  from: drupal7db[0-9]{3}
  generate: expression
  required: true
- description: Username for Drupal 7 database
  displayname: Drupal 7 Database User
  name: DRUPAL_DB_USER
  from: drupal-db-user[0-9]{3}
  generate: expression
  required: true
- description: Password for Drupal 7 database
  displayname: Drupal 7 Database Password
  from: '[a-zA-Z0-9]{24}'
  generate: expression
  name: DRUPAL_DB_PASSWORD
  required: true
- description: Prefix used on the tables in the database
  displayname: Drupal 7 Database Prefix
  from: drp_
  generate: expression
  name: DRUPAL_DB_PREFIX
  required: true
- description: Openshift User
  displayname: Openshift User
  name: OPENSHIFT_USER
  required: true
